<?xml version="1.0"?>
<ProMonLang>
   <NodeFactor>1</NodeFactor>
   <HeartbeatFactor>1</HeartbeatFactor>
   <Instrumentation>
      <Priority>0</Priority>
      <Mode>TAG_SINGULAR</Mode>
      <Category>Run</Category>
      <Function1>miniFE::initialize_mpi</Function1>
      <Position1>END</Position1>
      <Tag>
         <TagName>Run</TagName>
         <Data>miniFE.x</Data>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Application</Category>
      <Function1>miniFE::initialize_mpi</Function1>
      <Position1>END</Position1>
      <Function2>main</Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>Application</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>using recursive coordinate bisection method to partition the physical domain (called box) into disjoint sub-domains</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Application</Category>
      <Function1>box_partition</Function1>
      <Position1>BEGIN</Position1>
      <Function2>box_partition</Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>BoxPartition</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>creating a mesh to represent a brick-shaped domain of hexahedral elements (Generating matrix structure)</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Setup</Category>
      <Function1>miniFE::generate_matrix_structure&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt; &gt;</Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::generate_matrix_structure&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt; &gt;</Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>GenratingMatrixStruct</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>creating a mesh to represent a brick-shaped domain of hexahedral elements (Filling mesh)</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Setup</Category>
      <Function1>miniFE::simple_mesh_description&lt;int&gt;::simple_mesh_description
      </Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::simple_mesh_description&lt;int&gt;::simple_mesh_description
      </Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>CreatingFillingMesh</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>assembling finite-element matrices into a global matrix and vector (Assembly)</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Setup</Category>
      <Function1>miniFE::assemble_FE_data&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt;, miniFE::Vector&lt;double, int, int&gt; &gt;
      </Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::assemble_FE_data&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt;, miniFE::Vector&lt;double, int, int&gt; &gt;
      </Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>AssemblingFEData</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>imposing Dirichlet boundary condition (Sparse matrix-vector product)</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Setup</Category>
      <Function1>miniFE::impose_dirichlet&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt;, miniFE::Vector&lt;double, int, int&gt; &gt;
      </Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::impose_dirichlet&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt;, miniFE::Vector&lt;double, int, int&gt; &gt;
      </Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>ImposingDirichletBC</TagName>
      </Tag>
   </Instrumentation>      
   <Instrumentation>
      <Note>transforming global indices to indices local to current node</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Setup</Category>
      <Function1>miniFE::make_local_matrix&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt; &gt;</Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::make_local_matrix&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt; &gt;</Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>MakingLocalMatrix</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>solving linear-system using conjugate gradient</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Step</Category>
      <Function1>miniFE::cg_solve&lt;miniFE::CSRMatrix&lt;double, int,
         int&gt;, miniFE::Vector&lt;double, int, int&gt;,
         miniFE::matvec_std&lt;miniFE::CSRMatrix&lt;double, int,
         int&gt;, miniFE::Vector&lt;double, int, int&gt; &gt; &gt;
      </Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::cg_solve&lt;miniFE::CSRMatrix&lt;double, int,
         int&gt;, miniFE::Vector&lt;double, int, int&gt;,
         miniFE::matvec_std&lt;miniFE::CSRMatrix&lt;double, int,
         int&gt;, miniFE::Vector&lt;double, int, int&gt; &gt; &gt;
      </Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>cg_solve</TagName>
      </Tag>
   </Instrumentation>   
   <Instrumentation>
      <Note>Calculate matrix stats</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Setup</Category>
      <Function1>miniFE::rearrange_matrix_local_external&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt; &gt;</Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::rearrange_matrix_local_external&lt;miniFE::CSRMatrix&lt;double,
         int, int&gt; &gt;</Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>ComputeMatrixStats</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>This encampuses all above (almost)</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>Step</Category>
      <Function1>miniFE::driver&lt;double, int, int&gt;</Function1>
      <Position1>BEGIN</Position1>
      <Function2>miniFE::driver&lt;double, int, int&gt;</Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>driver</TagName>
      </Tag>
   </Instrumentation>
   <Instrumentation>
      <Note>output to YAML format</Note>
      <Priority>0</Priority>
      <Mode>TAG_DUAL</Mode>
      <Category>IO</Category>
      <Function1>YAML_Doc::generateYAML</Function1>
      <Position1>BEGIN</Position1>
      <Function2>YAML_Doc::generateYAML</Function2>
      <Position2>END</Position2>
      <Tag>
         <TagName>OutputYAML</TagName>
      </Tag>
   </Instrumentation>
   
   <!-- Monitoring Indicators -->         
<!--   <Instrumentation>
      <Note>heartbeat indicator from active selected nodes</Note>
      <Priority>0</Priority>
      <Mode>TAG_SINGULAR</Mode>
      <Category>Step</Category>
      <Function1>miniFE::waxpby&lt;miniFE::Vector&lt;double, int, int&gt; &gt;</Function1>
      <Position1>BEGIN</Position1>
      <Tag>
         <TagName>Heartbeat</TagName>
      </Tag>
   </Instrumentation>
-->
</ProMonLang>
