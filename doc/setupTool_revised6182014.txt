***************************************************************************************************
-- To install Promon we need Dyninst, Boost, and (gcc, g++, mpicc++,mpicc all 4.8.2 version or above)
***************************************************************************************************

* NOTE: all the application installation will be in /home/srcdir/APPS, the srcdir can be omar or hadisharifi you should use yours :)


-- Start with installing the Prerequisite for Dyninst

----------------------------------------------------------------------------------------
- NOTE: if you are using Ubuntu 14.04 gcc and g++ already installed both version 4.8.2 -
----------------------------------------------------------------------------------------

thg new gcc installation (please ignor this if you already have 4.8.2 version)
********************************************************************************:-

Dyninst uses the latest gcc (4.8.2 and above). Current operating system does not have this
version of gcc installed. This is quick instruction on how to install gcc.

prerequisite 1 for gcc 4.8.2:
(gmp-5.1.2)
        ./configure --prefix=/home/hsharifi/APPS/gmp-5.1.2
        make
	make install

prerequisite 2 for gcc 4.8.2:
(mpfr-3.1.2)
        ./configure --prefix=/home/hsharifi/APPS/mpfr-3.1.2 --with-gmp=/home/hsharifi/APPS/gmp-5.1.2/
        make
	make install

prerequisite 3 for gcc 4.8.1:
(mpc-1.0.1)
        ./configure --prefix=/home/hsharifi/APPS/mpc-1.0.1 --with-gmp=/home/hsharifi/APPS/gmp-5.1.2/ --with-mpfr=/home/hsharifi/APPS/mpfr-3.1.2
	make
	make install
          
THIS ONE --> ** Now you can install gcc (FOR LINUX)
(gcc 4.8 and above)
	mkdir objdir -- in my case (/home/omar/APPS/gcc-4.8.1)
	cd objdir -- in my case (/home/omar/APPS/gcc-4.8.1)
	%%configure [options] [target]
        /srcdir (e.g. Downloads/gcc-4.8.1)/configure --prefix=/home/omar/APPS/gcc-4.8.1 --with-gmp=/home/omar/APPS/gmp-5.1.2 --with-mpfr=/home/hsharifi/APPS/mpfr-3.1.2 --with-mpc=/home/omar/APPS/mpc-1.0.1
	make
	make install

OR -->** Now you can install gcc (FOR UBUNTU)
sudo apt-get install python-software-properties
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install gcc-4.8
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50

sudo apt-get install python-software-properties
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install g++-4.8
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50


From this point, try to have gcc in the path to by calling gcc, this version
of gcc will be called. This can be done by editing .bashrc. The input could
look like:  
           export PATH=/home/hsharifi/APPS/gcc-4.8.2/bin:$PATH 

(Make sure you do it right and system will not get mixed up with the old
version) 

============================================================================================

Dyninst Prerequisite installation
***********************************:-

prerequisite 1: 
(for libdwarf 20140413)
       Extract the folder inside /home/omar/APPS
       cd libdwarf/
       ./configure --prefix=/home/hsharifi/APPS/dwarf-20140413/libdwarf/ --enable-shared

	Install it: goto to the destination forlder ($pkgdir in my case /nmsu/tools/dwarf-20140413) and create it, then goto libdwarf folder and write
	
	install -d /nmsu/tools/dwarf-20140413/lib
	install -m 644 libdwarf.a /nmsu/tools/dwarf-20140413/lib
	install -m 644 libdwarf.so /nmsu/tools/dwarf-20140413/lib
	install -d /nmsu/tools/dwarf-20140413/include/libdwarf
	install dwarf.h libdwarf.h /nmsu/tools/dwarf-20140413/include/libdwarf



prerequisite 2:
(fftw-3.3.3)
        ./configure --prefix=/home/hsharifi/APPS/fftw-3.3.3 --enable-shared --with-pic
        make

prerequisite 3:
(Boost library boost_1_54_0)
        sudo apt-get autoremove package
	wget http://sourceforge.net/projects/boost/files/boost/1.54.0/boost_1_54_0.tar.gz/download
	tar -xvzf boost_1_54_0.tar.gz
	cd boost_1_54_0/
	./bootstrap.sh --prefix=/home/hsharifi/APPS/boost_1_54_0
	sudo ./b2 install --with=all
==================================================================================================

Dyninst 8.1.2 installation
***********************************:-

Make sure you own the dyninst-8.1.2 directory. Do these two changes to Dyninst:

         ./configure --prefix=/home/hsharifi/APPS/DyninstAPI-8.1.2/ --with-boost=/home/hsharifi/APPS/boost_1_54_0 --with-libdwarf=/home/hsharifi/APPS/dwarf-20121130/libdwarf CC=/home/hsharifi/APPS/gcc-4.8.1/bin/gcc CXX=/home/hsharifi/APPS/gcc-4.8.1/bin/gcc CPPFLAGS=-I/home/hsharifi/APPS/dwarf-20121130/libdwarf CXXFLAGS=-I/home/hsharifi/APPS/dwarf-20121130/libdwarf

-OR 

** THE HPC BIGDAT CONFIG:
./configure --prefix=/home/hsharifi/APPS/DyninstAPI-8.1.2/ --with-boost=/nmsu/tools/boost_1_54_0 --with-libdwarf=/nmsu/tools/dwarf-20140413 CC=gcc CXX=gcc 

         make

============lets keep this part as it is. You don't need it ================================
============================================================================================

Installing Gadget and testing it:

----------------------------------------------------------------------------------------
** use this website http://astrobites.org/2011/04/02/installing-and-running-gadget-2/ **
----------------------------------------------------------------------------------------

Prerequisite 1: fftw
	wget http://www.fftw.org/fftw-2.1.5.tar.gz
	cd fftw-2.1.5
	./configure --prefix=/home/omar/APPS/fftw-2.1.5/ --enable-float --enable-type-prefix --enable-mpi
	make
	make install 		(this will install it in the /home/hsharifi/fftw-3.3.3 as defined with configure option)

Prereuquisite 2: gsl
	wget https://ftp.gnu.org/gnu/gsl/gsl-1.15.tar.gz
	cd  gsl-1.15
	./configure --prefix=/home/hsharifi/gsl-1.15
	make
	make install


Unzip the vms.tar.gz into a direcoty path. I put it in the home directory (/home/hsharifi/)

cd Gadget-2.0.6/Gadget2
-------------------------------------------------
Edit Makefile and make sure the 
correct home directory and 
correct path for mpi compiler is selected. 
line   84 -->	HOMEDIR = /home/hsharifi
line 104 --> 	MPICHLIB =  -L/usr/lib

-------------------------------------------------
make clean
make

while in Gadget-2.0.6/Gadget2:
	vim parameterfiles/galaxy.param
make sure InitCondFile, OutputDir, OutputListFilename to point to the correct directory.
Specially InitCondFile should point to the correct .dat file.
For initial test, it should point to files in directory vms/apps/Gadget-2.0.6/Gadget2/parameterfiles

** in your terminal write:
$ export LD_LIBRARY_PATH=/nmsu/tools/dwarf-20140413/lib:/nmsu/tools/DyninstAPI-8.1.2/lib:/nmsu/tools/gsl-1.15/lib

** sudo apt-get install libgsl0ldbl libgsl0-dev --- if you don't have libgsl in ubuntu 14.04

edit the galaxy.param and change `PeriodicBoundariesOn=1'

To test while in Gadget-2.0.6/Gadget2 run this command:
mpirun -np 1 ./Gadget2 parameterfiles/galaxy.param

====================================================================================
in where unzipped the archieve file (in my case home directory) there is a script called "script".
vim script

There are many "export" command for shred libraries.
Make sure it is pointing to the correct directories.

If you are using slurm, run Gadget by dyninst :
	sbatch script
check the log file for any errors.

====================================================================================
To run Gadget in restart mode, you need to copy one of the snapshots to ininital file.
Because each snapshot has "attribute" now, you can have to copy with --preserve=xattr parameter

for example 
	cp --preserve=xattr  snapshot_000 galaxy_littleendian.dat

